KEYWORDS = {
    'topological': 10, 
    'qubit': 5, 
    'qec': 20,
    'tqec': 20,
    'ftqc': 20,
    'ftqec': 20,
    'fault': 5,
    'tolerant': 15,
    'fault-tolerant': 15,
    'error': 5, 
    'correction': 10,
    'surface': 7,
    'code': 15, 
    'codes': 15,
    'circuits': 15,
    'computing': 15, 
    'computer': 15, 
    'computers': 15, 
    'computation': 15, 
    'computations': 15,
    'lower': 5,
    'distilation': 4,
    'threshold': 6, 
    'cluster': 6, 
    'state': 5, 
    'rate': 3,
    'cnot': 15,
    'rates': 3,
    'classical': 6, 
    'processing': 6, 
    'trapped': 3, 
    'ion': 1,
    'scalability': 8, 
    'scalable': 8, 
    'stabilizers': 15,
    'stabilizer': 15,
    'stablizer': 15,
    'stablizers': 15,
    'minimum-weight': 25,
    'minimum': 6,
    'weight': 6,
    'perfect': 6,
    'matching': 10,
    'shor': 20, 
    'shor\'s': 20,
    'pauli': 20,
    'clifford': 20, 
    'grover': 20, 
    'algorithm': 20,
    'algorithms': 20,
    'quantum': 4,
    'qubits': 5, 
    'logical': 7, 
    'hadamard': 10, 
    'unitary': 5,
    'cnot': 10, 
    'gate': 10,
    'gates': 10,
    'nearest': 7, 
    'neighbour': 7, 
    'neighbor': 7,
    'nearest-neighbour': 7, 
    'nearest-neighbor': 7, 
}

def score(title, abstract):
    ttitle = sum([KEYWORDS.get(w, 0) for w in title.lower().strip().split()])
    aabstract = sum([KEYWORDS.get(w, 0) for w in abstract.lower().split()])
    
    return ttitle * 1.5 + aabstract
